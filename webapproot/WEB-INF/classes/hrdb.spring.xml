<?xml version="1.0"?>

<!-- Generated 01/20/2016 08:40:29

Configuration for 'hrdb' database service

-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">


    <bean 
        id="hrdb"
        class="com.hrdb.Hrdb"
        scope="singleton"
        lazy-init="true">
        <property name="dataServiceManager">
            <ref bean="hrdbDataService"/>
        </property>
        <property name="taskManager">
            <ref bean="hrdbTaskMgr"/>
        </property>
    </bean>


    <bean 
        class="com.wavemaker.runtime.data.spring.WMPropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:hrdb.properties</value>
            </list>
        </property>
    </bean>

    <bean 
        id="hrdbDataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
        lazy-init="true">
        <property name="driverClassName" value="${hrdb.driverClassName}"/>
        <property name="url" value="${hrdb.connectionUrl}"/>
        <property name="username" value="${hrdb.username}"/>
        <property name="password" value="${hrdb.password}"/>
    </bean>


    <bean 
        id="hrdbTxMgr" 
        class="org.springframework.orm.hibernate3.HibernateTransactionManager"
        lazy-init="true">
        <property name="sessionFactory">
            <ref bean="hrdbSessionFactory"/>
        </property>
    </bean>


    <bean 
        id="hrdbHibernateTemplate"
        class="org.springframework.orm.hibernate3.HibernateTemplate"
        lazy-init="true">
        <property name="sessionFactory"> 
            <ref bean="hrdbSessionFactory"/>
        </property>
    </bean>  


    <bean 
        id="hrdbSessionFactory" 
        class="com.wavemaker.runtime.data.spring.ConfigurationAndSessionFactoryBean"
        lazy-init="true">

        <!-- A unique name for this SessionFactory's configuration -->
        <property name="name" value="hrdb"/>
        <property name="dataSource" ref="hrdbDataSource"/>

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hrdb.dialect}</prop>
                <prop key="hibernate.transaction.factory_class">
                    org.hibernate.transaction.JDBCTransactionFactory
                </prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.jdbc.batch_size">0</prop>
            </props> 
        </property>

        <property name="mappingResources">
            <list>

<value>com/hrdb/data/Employee.hbm.xml</value>
<value>com/hrdb/data/User.hbm.xml</value>
<value>com/hrdb/data/Vacation.hbm.xml</value>
<value>com/hrdb/data/Department.hbm.xml</value>

<value>com/hrdb/data/Employee.ql.xml</value>
<value>com/hrdb/data/app-queries.ql.xml</value>

            </list>
        </property>

    </bean>


    <!-- the data service bean instance is injected into the service bean -->
    <bean 
        id="hrdbDataService" 
        class="com.wavemaker.runtime.data.spring.SpringDataServiceManager"
        lazy-init="true">
        <constructor-arg>
            <!-- the value of the "name" property of the SessionFactory -->
            <value>hrdb</value>
        </constructor-arg>
        <constructor-arg>
            <ref bean="hrdbHibernateTemplate"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="hrdbTxMgr"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="hrdbTaskMgr"/>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="useIndividualCRUDOperations" value="false"/>
                <entry key="refreshEntities" value=""/> 
            </map>
        </constructor-arg>
    </bean>


    <bean 
        id="hrdbTaskMgr"
        class="com.wavemaker.runtime.data.DefaultTaskManager"
        lazy-init="true"/>

    <bean class="com.wavemaker.runtime.service.events.EventWire"
        lazy-init="false">
        <property name="serviceWire" ref="hrdbServiceWire"/>
        <property name="eventListener">
            <bean class="com.wavemaker.runtime.data.DataServiceEventListener"/>
        </property>
    </bean>

    <bean id="hrdbServiceWire"
        class="com.wavemaker.runtime.service.reflect.ReflectServiceWire"
        lazy-init="false" scope="singleton">
        <property name="serviceId" value="hrdb"/>
        <property name="serviceType" ref="DataService"/>
    </bean>

</beans>
