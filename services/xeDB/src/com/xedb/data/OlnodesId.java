package com.xedb.data;
// Generated 20/01/2016 09:51:24 AM by Hibernate Tools 3.2.4.GA


import java.math.BigDecimal;

/**
 * OlnodesId generated by hbm2java
 */
public class OlnodesId  implements java.io.Serializable {


     private String olName;
     private String category;
     private BigDecimal nodeId;
     private BigDecimal parentId;
     private BigDecimal nodeType;
     private BigDecimal nodeTextlen;
     private BigDecimal nodeTextoff;
     private String nodeName;

    

    
   
    public String getOlName() {
        return this.olName;
    }
    
    public void setOlName(String olName) {
        this.olName = olName;
    }
    public String getCategory() {
        return this.category;
    }
    
    public void setCategory(String category) {
        this.category = category;
    }
    public BigDecimal getNodeId() {
        return this.nodeId;
    }
    
    public void setNodeId(BigDecimal nodeId) {
        this.nodeId = nodeId;
    }
    public BigDecimal getParentId() {
        return this.parentId;
    }
    
    public void setParentId(BigDecimal parentId) {
        this.parentId = parentId;
    }
    public BigDecimal getNodeType() {
        return this.nodeType;
    }
    
    public void setNodeType(BigDecimal nodeType) {
        this.nodeType = nodeType;
    }
    public BigDecimal getNodeTextlen() {
        return this.nodeTextlen;
    }
    
    public void setNodeTextlen(BigDecimal nodeTextlen) {
        this.nodeTextlen = nodeTextlen;
    }
    public BigDecimal getNodeTextoff() {
        return this.nodeTextoff;
    }
    
    public void setNodeTextoff(BigDecimal nodeTextoff) {
        this.nodeTextoff = nodeTextoff;
    }
    public String getNodeName() {
        return this.nodeName;
    }
    
    public void setNodeName(String nodeName) {
        this.nodeName = nodeName;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof OlnodesId) ) return false;
		 OlnodesId castOther = ( OlnodesId ) other; 
         
		 return ( (this.getOlName()==castOther.getOlName()) || ( this.getOlName()!=null && castOther.getOlName()!=null && this.getOlName().equals(castOther.getOlName()) ) )
 && ( (this.getCategory()==castOther.getCategory()) || ( this.getCategory()!=null && castOther.getCategory()!=null && this.getCategory().equals(castOther.getCategory()) ) )
 && ( (this.getNodeId()==castOther.getNodeId()) || ( this.getNodeId()!=null && castOther.getNodeId()!=null && this.getNodeId().equals(castOther.getNodeId()) ) )
 && ( (this.getParentId()==castOther.getParentId()) || ( this.getParentId()!=null && castOther.getParentId()!=null && this.getParentId().equals(castOther.getParentId()) ) )
 && ( (this.getNodeType()==castOther.getNodeType()) || ( this.getNodeType()!=null && castOther.getNodeType()!=null && this.getNodeType().equals(castOther.getNodeType()) ) )
 && ( (this.getNodeTextlen()==castOther.getNodeTextlen()) || ( this.getNodeTextlen()!=null && castOther.getNodeTextlen()!=null && this.getNodeTextlen().equals(castOther.getNodeTextlen()) ) )
 && ( (this.getNodeTextoff()==castOther.getNodeTextoff()) || ( this.getNodeTextoff()!=null && castOther.getNodeTextoff()!=null && this.getNodeTextoff().equals(castOther.getNodeTextoff()) ) )
 && ( (this.getNodeName()==castOther.getNodeName()) || ( this.getNodeName()!=null && castOther.getNodeName()!=null && this.getNodeName().equals(castOther.getNodeName()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getOlName() == null ? 0 : this.getOlName().hashCode() );
         result = 37 * result + ( getCategory() == null ? 0 : this.getCategory().hashCode() );
         result = 37 * result + ( getNodeId() == null ? 0 : this.getNodeId().hashCode() );
         result = 37 * result + ( getParentId() == null ? 0 : this.getParentId().hashCode() );
         result = 37 * result + ( getNodeType() == null ? 0 : this.getNodeType().hashCode() );
         result = 37 * result + ( getNodeTextlen() == null ? 0 : this.getNodeTextlen().hashCode() );
         result = 37 * result + ( getNodeTextoff() == null ? 0 : this.getNodeTextoff().hashCode() );
         result = 37 * result + ( getNodeName() == null ? 0 : this.getNodeName().hashCode() );
         return result;
   }   


}


