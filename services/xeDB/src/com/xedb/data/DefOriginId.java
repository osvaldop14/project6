package com.xedb.data;
// Generated 20/01/2016 09:51:24 AM by Hibernate Tools 3.2.4.GA


import java.math.BigDecimal;
import java.util.Arrays;

/**
 * DefOriginId generated by hbm2java
 */
public class DefOriginId  implements java.io.Serializable {


     private String originDb;
     private String originDblink;
     private BigDecimal inusr;
     private BigDecimal cscn;
     private String enqTid;
     private BigDecimal recoSeqNo;
     private byte[] catchup;

    

    
   
    public String getOriginDb() {
        return this.originDb;
    }
    
    public void setOriginDb(String originDb) {
        this.originDb = originDb;
    }
    public String getOriginDblink() {
        return this.originDblink;
    }
    
    public void setOriginDblink(String originDblink) {
        this.originDblink = originDblink;
    }
    public BigDecimal getInusr() {
        return this.inusr;
    }
    
    public void setInusr(BigDecimal inusr) {
        this.inusr = inusr;
    }
    public BigDecimal getCscn() {
        return this.cscn;
    }
    
    public void setCscn(BigDecimal cscn) {
        this.cscn = cscn;
    }
    public String getEnqTid() {
        return this.enqTid;
    }
    
    public void setEnqTid(String enqTid) {
        this.enqTid = enqTid;
    }
    public BigDecimal getRecoSeqNo() {
        return this.recoSeqNo;
    }
    
    public void setRecoSeqNo(BigDecimal recoSeqNo) {
        this.recoSeqNo = recoSeqNo;
    }
    public byte[] getCatchup() {
        return this.catchup;
    }
    
    public void setCatchup(byte[] catchup) {
        this.catchup = catchup;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof DefOriginId) ) return false;
		 DefOriginId castOther = ( DefOriginId ) other; 
         
		 return ( (this.getOriginDb()==castOther.getOriginDb()) || ( this.getOriginDb()!=null && castOther.getOriginDb()!=null && this.getOriginDb().equals(castOther.getOriginDb()) ) )
 && ( (this.getOriginDblink()==castOther.getOriginDblink()) || ( this.getOriginDblink()!=null && castOther.getOriginDblink()!=null && this.getOriginDblink().equals(castOther.getOriginDblink()) ) )
 && ( (this.getInusr()==castOther.getInusr()) || ( this.getInusr()!=null && castOther.getInusr()!=null && this.getInusr().equals(castOther.getInusr()) ) )
 && ( (this.getCscn()==castOther.getCscn()) || ( this.getCscn()!=null && castOther.getCscn()!=null && this.getCscn().equals(castOther.getCscn()) ) )
 && ( (this.getEnqTid()==castOther.getEnqTid()) || ( this.getEnqTid()!=null && castOther.getEnqTid()!=null && this.getEnqTid().equals(castOther.getEnqTid()) ) )
 && ( (this.getRecoSeqNo()==castOther.getRecoSeqNo()) || ( this.getRecoSeqNo()!=null && castOther.getRecoSeqNo()!=null && this.getRecoSeqNo().equals(castOther.getRecoSeqNo()) ) )
 && ( (this.getCatchup()==castOther.getCatchup()) || ( this.getCatchup()!=null && castOther.getCatchup()!=null && Arrays.equals(this.getCatchup(), castOther.getCatchup()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getOriginDb() == null ? 0 : this.getOriginDb().hashCode() );
         result = 37 * result + ( getOriginDblink() == null ? 0 : this.getOriginDblink().hashCode() );
         result = 37 * result + ( getInusr() == null ? 0 : this.getInusr().hashCode() );
         result = 37 * result + ( getCscn() == null ? 0 : this.getCscn().hashCode() );
         result = 37 * result + ( getEnqTid() == null ? 0 : this.getEnqTid().hashCode() );
         result = 37 * result + ( getRecoSeqNo() == null ? 0 : this.getRecoSeqNo().hashCode() );
         int catchupHashcode = 0;
         byte[] catchupProperty = this.getCatchup();
         if(catchupProperty != null) {
             catchupHashcode = 1;
             for (int i=0; i<catchupProperty.length; i++) {
                 catchupHashcode = 37 * catchupHashcode + catchupProperty[i];
             }
         }

         result = 37 * result + catchupHashcode;

         return result;
   }   


}


